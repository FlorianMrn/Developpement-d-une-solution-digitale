version: "3.2"
services:
  redis:
    restart: always
    image: redis:5
    ports:
      - "6379:6379"
    networks:
      - db-net
    extra_hosts:
    - "host.docker.internal:172.17.0.1"

  db:
    restart: always
    image: mysql:5.7
    environment:
      - MYSQL_HOST=localhost
      - MYSQL_PORT=3306
      - MYSQL_ROOT_HOST=%
      - MYSQL_DATABASE=DB_NAME
      - MYSQL_USER=DB_USER
      - MYSQL_PASSWORD=DB_PASSWORD
      - MYSQL_ROOT_PASSWORD=DB_PASSWORD
    ports:
      - "3302:3306"
    networks:
      - db-net

  back:
    restart: always
    container_name: back
    command : bash -c "python check_db.py --service-name db --ip db --port 3306 && 
                      python manage.py migrate &&
                      python manage.py runserver 0.0.0.0:8000"
    env_file:
      - ./back/.env
    build:
      context: ./back/
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    networks:
      - db-net

  front:
    restart: always
    command : npm start
    container_name: front
    env_file:
      - ./front/.env
    build:
      context: ./front/
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    stdin_open: true
    depends_on:
      - back
    networks:
      - db-net

networks:
  db-net:
    driver: bridge
